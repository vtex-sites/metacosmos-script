import{br as M}from"./app.js";var j=Object.defineProperty,C=(Z,l,b)=>l in Z?j(Z,l,{enumerable:!0,configurable:!0,writable:!0,value:b}):Z[l]=b,Q=(Z,l,b)=>(C(Z,typeof l!="symbol"?l+"":l,b),b);class g{constructor(){Q(this,"_emitter",new EventTarget)}addEventListener(l,b,m){this._emitter.addEventListener(l,b,m)}removeEventListener(l,b,m){this._emitter.removeEventListener(l,b,m)}dispatchEvent(l){return this._emitter.dispatchEvent(l)}removeAllEventListeners(){this._emitter=new EventTarget}}const P=()=>{const Z=document.createElement("canvas");return Z.style.maxWidth="100%",Z.style.objectFit="cover",Z},U=Symbol("Comlink.proxy"),B=Symbol("Comlink.endpoint"),F=Symbol("Comlink.releaseProxy"),S=Symbol("Comlink.thrown"),H=Z=>typeof Z=="object"&&Z!==null||typeof Z=="function",v={canHandle:Z=>H(Z)&&Z[U],serialize(Z){const{port1:l,port2:b}=new MessageChannel;return T(Z,l),[b,[b]]},deserialize(Z){return Z.start(),t(Z)}},E={canHandle:Z=>H(Z)&&S in Z,serialize({value:Z}){let l;return Z instanceof Error?l={isError:!0,value:{message:Z.message,name:Z.name,stack:Z.stack}}:l={isError:!1,value:Z},[l,[]]},deserialize(Z){throw Z.isError?Object.assign(new Error(Z.value.message),Z.value):Z.value}},N=new Map([["proxy",v],["throw",E]]);function T(Z,l=self){l.addEventListener("message",function b(m){if(!m||!m.data)return;const{id:W,type:X,path:d}=Object.assign({path:[]},m.data),V=(m.data.argumentList||[]).map(R);let c;try{const G=d.slice(0,-1).reduce((y,h)=>y[h],Z),u=d.reduce((y,h)=>y[h],Z);switch(X){case"GET":c=u;break;case"SET":G[d.slice(-1)[0]]=R(m.data.value),c=!0;break;case"APPLY":c=u.apply(G,V);break;case"CONSTRUCT":{const y=new u(...V);c=J(y)}break;case"ENDPOINT":{const{port1:y,port2:h}=new MessageChannel;T(Z,h),c=L(y,[y])}break;case"RELEASE":c=void 0;break;default:return}}catch(G){c={value:G,[S]:0}}Promise.resolve(c).catch(G=>({value:G,[S]:0})).then(G=>{const[u,y]=a(G);l.postMessage(Object.assign(Object.assign({},u),{id:W}),y),X==="RELEASE"&&(l.removeEventListener("message",b),k(l))})}),l.start&&l.start()}function w(Z){return Z.constructor.name==="MessagePort"}function k(Z){w(Z)&&Z.close()}function t(Z,l){return s(Z,[],l)}function I(Z){if(Z)throw new Error("Proxy has been released and is not useable")}function s(Z,l=[],b=function(){}){let m=!1;const W=new Proxy(b,{get(X,d){if(I(m),d===F)return()=>p(Z,{type:"RELEASE",path:l.map(V=>V.toString())}).then(()=>{k(Z),m=!0});if(d==="then"){if(l.length===0)return{then:()=>W};const V=p(Z,{type:"GET",path:l.map(c=>c.toString())}).then(R);return V.then.bind(V)}return s(Z,[...l,d])},set(X,d,V){I(m);const[c,G]=a(V);return p(Z,{type:"SET",path:[...l,d].map(u=>u.toString()),value:c},G).then(R)},apply(X,d,V){I(m);const c=l[l.length-1];if(c===B)return p(Z,{type:"ENDPOINT"}).then(R);if(c==="bind")return s(Z,l.slice(0,-1));const[G,u]=n(V);return p(Z,{type:"APPLY",path:l.map(y=>y.toString()),argumentList:G},u).then(R)},construct(X,d){I(m);const[V,c]=n(d);return p(Z,{type:"CONSTRUCT",path:l.map(G=>G.toString()),argumentList:V},c).then(R)}});return W}function e(Z){return Array.prototype.concat.apply([],Z)}function n(Z){const l=Z.map(a);return[l.map(b=>b[0]),e(l.map(b=>b[1]))]}const o=new WeakMap;function L(Z,l){return o.set(Z,l),Z}function J(Z){return Object.assign(Z,{[U]:!0})}function a(Z){for(const[l,b]of N)if(b.canHandle(Z)){const[m,W]=b.serialize(Z);return[{type:"HANDLER",name:l,value:m},W]}return[{type:"RAW",value:Z},o.get(Z)||[]]}function R(Z){switch(Z.type){case"HANDLER":return N.get(Z.name).deserialize(Z.value);case"RAW":return Z.value}}function p(Z,l,b){return new Promise(m=>{const W=O();Z.addEventListener("message",function X(d){!d.data||!d.data.id||d.data.id!==W||(Z.removeEventListener("message",X),m(d.data))}),Z.start&&Z.start(),Z.postMessage(Object.assign({id:W},l),b)})}function O(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}const D=Z=>Z instanceof ImageBitmap,f=Z=>{Z.set("CustomEvent",{canHandle:l=>l instanceof CustomEvent,serialize:({type:l,detail:b})=>[{type:l,detail:b},Object.values(b||{}).filter(D)],deserialize:l=>l})},z="",x=typeof window<"u"&&window.Blob&&new Blob([atob(z)],{type:"text/javascript;charset=utf-8"});function r(){const Z=x&&(window.URL||window.webkitURL).createObjectURL(x);try{return Z?new Worker(Z):new Worker("data:application/javascript;base64,"+z)}finally{Z&&(window.URL||window.webkitURL).revokeObjectURL(Z)}}var A=Object.defineProperty,q=(Z,l,b)=>l in Z?A(Z,l,{enumerable:!0,configurable:!0,writable:!0,value:b}):Z[l]=b,Y=(Z,l,b)=>(q(Z,typeof l!="symbol"?l+"":l,b),b);const K=class extends g{constructor(Z){super(),Y(this,"_player"),Y(this,"_input"),Y(this,"_isPlaying",!1),Y(this,"canvas",P()),Y(this,"frameSize"),Y(this,"preferences",{fps:30,pauseOnEmpty:!0}),this._player=Z;const l=this.canvas,b=l.getContext("bitmaprenderer"),m=({type:W,detail:X})=>this.dispatchEvent(new CustomEvent(W,{detail:X}));this._player.addEventListener(K.FRAME_RECEIVED_EVENT,J(m)),this._player.addEventListener(K.FRAME_PROCESSED_EVENT,J(m)),this._player.addEventListener(K.FRAME_RENDERED_EVENT,J(({type:W,detail:X})=>{const{bitmap:d,frameSize:V,...c}=X;this.frameSize=V,l.width!==d.width&&(l.width=d.width),l.height!==d.height&&(l.height=d.height),b.transferFromImageBitmap(d),m({type:W,detail:c})})),this.frameSize={width:l.width,height:l.height}}static async create(Z){Z={locateFile:M,...Z},f(N);const l=t(new r);await l.env({screen:{width:screen.width,height:screen.height},devicePixelRatio});const b=await l.create(Z);return new this(b)}get isPlaying(){return this._isPlaying}use(Z,l={}){this._input=Z,this._player.useNewBitmapStream().then(async b=>{const m=Z[Symbol.asyncIterator](l);for(;;){const{done:W,value:X}=await m.next(this.preferences.fps);if(this._input!==Z||(W&&this.preferences.pauseOnEmpty&&(this._isPlaying=!1),W))break;await b.push(L(X,[X.data]))}await b.stop(),b[F]()})}async applyEffect(Z){await Z._bind({FS:null,evalJs:async m=>await this._player._evalJs(m),callJsMethod:(m,W)=>this._player._callJsMethod(m,W)});const l=Z.name,b=Z._resource._data;return await this._player.applyEffect(L({name:l,data:b},[])),null}async clearEffect(){await this._player.clearEffect()}async addModule(...Z){await Promise.all(Z.map(async l=>{await l._load();const b=l._resource._data;await this._player.addModule(L({data:b},[]))}))}play(Z={}){Object.assign(this.preferences,{pauseOnEmpty:!0},Z),this._player.play(this.preferences)}async pause(){await this._player.pause(),this._isPlaying=!1}async destroy(){await this._player.destroy(),this._player[F]()}setVolume(...Z){this._player.setVolume(...Z)}async callJsMethod(...Z){await this._player._callJsMethod(...Z)}};let i=K;Y(i,"FRAME_RECEIVED_EVENT","framereceived"),Y(i,"FRAME_PROCESSED_EVENT","frameprocessed"),Y(i,"FRAME_RENDERED_EVENT","framerendered"),Y(i,"FRAME_DATA_EVENT","framedata"),Y(i,"EFFECT_ACTIVATED_EVENT","effectactivated");export{i as h,g as m,P as t};
//# sourceMappingURL=index.74a6eb45.js.map
