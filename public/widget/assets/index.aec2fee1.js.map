{"version":3,"file":"index.aec2fee1.js","sources":["../../src/lib/elements/Popup/Popup.svelte","../../src/pages/_layout/Layout.svelte","../../src/lib/elements/Navbar/context.ts","../../src/lib/elements/Navbar/Navbar.svelte","../../src/lib/elements/Navbar/NavItem.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import Floating from \"../Floating\"\n  import { cx } from \"../utils\"\n\n  type FloatingProps = Floating[\"$$prop_def\"]\n\n  export let anchor: NonNullable<FloatingProps[\"anchor\"]>\n  export let placement: FloatingProps[\"placement\"] = \"bottom\"\n  export let offset: FloatingProps[\"offset\"] = [0, 0]\n  export let delay = 2000\n\n  let floating: Floating\n\n  $: classes = cx($$restProps.class, \"tint-popup\")\n</script>\n\n<Floating\n  bind:this={floating}\n  {anchor}\n  {placement}\n  {offset}\n  on:open={() => setTimeout(() => floating?.close(), delay)}\n>\n  <div class={classes}>\n    <slot />\n  </div>\n</Floating>\n\n<style lang=\"postcss\">\n  .tint-popup {\n    @apply flex shrink-0 items-center rounded-lg bg-[#38383c] px-4 py-2 text-sm text-white;\n  }\n</style>\n","<script context=\"module\" lang=\"ts\">\n  import type { IconVariant } from \"@lib/elements\"\n  import { Paths, loading } from \"@lib/router\"\n  import { isMobileDevice } from \"@lib/utils/is-mobile-device\"\n  import { cart } from \"@pages/best-match/stores\"\n  import { pickADate, showAd } from \"@pages/demo\"\n  import { completed } from \"../face-analysis/state\"\n\n  type Route = {\n    path: string\n    title: string\n    icon: IconVariant\n    active: boolean\n    unimplemented: boolean\n  }\n  export type { Route }\n</script>\n\n<script lang=\"ts\">\n  import type { SvelteComponent } from \"svelte\"\n  import { createEventDispatcher } from \"svelte\"\n  import { analytics } from \"@lib/analytics\"\n  import { Icon, NavItem, Navbar } from \"@lib/elements\"\n  import Popup from \"@lib/elements/Popup/Popup.svelte\"\n  import { useRouter } from \"@lib/router\"\n  import { language } from \"@pages/language\"\n  import { getContext } from \"./context\"\n\n  const router = useRouter()\n  const ctx = getContext()\n  const dispatch = createEventDispatcher<{ demo: void }>()\n\n  const items: Record<number, SvelteComponent> = {}\n\n  const RouteSettingByPath: Record<Route[\"path\"], Pick<Route, \"title\" | \"icon\">> = {\n    [Paths.BestMatch]: {\n      title: $language.bestMatch,\n      icon: \"best-match\",\n    },\n    [Paths.MakeupTransfer]: {\n      title: \"Makeup transfer\",\n      icon: \"makeup-transfer\",\n    },\n    [Paths.GiftSelection]: {\n      title: \"Gift selection\",\n      icon: \"gift-selection\",\n    },\n    [Paths.BeautyAdvisor]: {\n      title: \"Beauty advisor\",\n      icon: \"advisor\",\n    },\n    [Paths.BookADemo]: {\n      title: \"Book a demo\",\n      icon: \"book-a-demo\",\n    },\n    [Paths.SkinCare]: {\n      title: \"Skin care\",\n      icon: \"skin-care\",\n    },\n  }\n\n  let routes = ctx.routes\n    .map((route) => {\n      const setting = RouteSettingByPath[route.path as keyof typeof RouteSettingByPath]\n      return setting\n        ? {\n            unimplemented: true,\n            ...route,\n            ...setting,\n            active: false,\n          }\n        : null\n    })\n    .filter(Boolean) as Route[]\n\n  $: routes = routes.map((route) => ({\n    ...route,\n    active: router.match($router.location, route.path),\n  }))\n</script>\n\n<div>\n  {#if !ctx.recommendationSystemVersion}\n    <Navbar let:close class={$completed || !$loading ? \"\" : \"pointer-events-none\"}>\n      <Icon slot=\"logo\" variant=\"logo\" />\n      <ul>\n        {#each routes as route, idx}\n          {@const implemented = !route.unimplemented}\n          {@const bestMatch = route.path === Paths.BestMatch}\n          {@const bookADemo = route.path === Paths.BookADemo}\n          <li class:bookADemo>\n            <NavItem\n              icon={route.icon}\n              active={route.active}\n              bind:this={items[idx]}\n              on:click={() => {\n                if (bookADemo) pickADate()\n\n                if (ctx.demo && !bestMatch && !bookADemo) showAd()\n                else if (implemented && !bookADemo) router.push(route.path)\n\n                close()\n              }}\n              on:click={() => analytics.main_left_section_clicked({ section_name: route.title })}\n              qa={`tint-navbar-item-${route.path.slice(1)}`}\n            >\n              {route.title}\n            </NavItem>\n            {#if route.unimplemented && !ctx.demo}\n              <Popup anchor={items[idx]} placement=\"bottom-start\" offset={[2, 0]}>Coming soon</Popup\n              >\n            {/if}\n            {#if ctx.demo && !bestMatch && !bookADemo}\n              <Popup anchor={items[idx]} placement=\"bottom-start\" offset={[2, 0]}>Book a demo</Popup\n              >\n            {/if}\n          </li>\n        {/each}\n        {#if isMobileDevice()}\n          {#if $cart.length}\n            <li class=\"cart\">\n              <NavItem as=\"button\" icon=\"bag\" on:click={() => cart.redirect()}>Cart</NavItem>\n            </li>\n          {/if}\n          <li class=\"close\">\n            <NavItem as=\"button\" icon=\"close-circle\" on:click={() => (ctx.close(), close())}>\n              Close app\n            </NavItem>\n          </li>\n        {/if}\n      </ul>\n    </Navbar>\n  {/if}\n  <slot />\n</div>\n\n<style lang=\"postcss\">\n  div {\n    @apply relative z-10 flex h-full w-full xl:h-[48.4375rem] xl:w-[75rem] xl:rounded-xl;\n\n    & > :global(:not(:first-child)) {\n      @apply min-w-0;\n    }\n  }\n\n  ul {\n    @apply mb-auto flex grow flex-col gap-2;\n  }\n\n  li {\n    @apply overflow-hidden;\n\n    &.cart {\n      @apply relative;\n\n      &::before {\n        @apply absolute top-[0.125rem] left-[1.625rem] block h-3 w-3 rounded-full bg-[#ff2d55] content-[\"\"];\n      }\n    }\n\n    &:not(.bookADemo) + .close {\n      @apply mt-auto;\n    }\n  }\n\n  .close {\n    @apply xl:hidden;\n  }\n\n  .bookADemo {\n    @apply mt-auto;\n  }\n</style>\n","import { getContext, setContext } from \"svelte\"\nimport type { Writable } from \"svelte/store\"\n\nconst key = Symbol(\"open\")\n\nexport const setOpen = (value: Writable<boolean>) => setContext(key, value)\nexport const getOpen = () => getContext<Writable<boolean>>(key)\n","<script lang=\"ts\">\n  import { writable } from \"svelte/store\"\n  import { fade } from \"svelte/transition\"\n  import { language } from \"@pages\"\n  import { cart } from \"@pages/best-match/stores\"\n  import IconButton from \"../IconButton\"\n  import { clickOutside, cx, getSvelteRoot } from \"../utils\"\n  import { setOpen } from \"./context\"\n\n  const root = getSvelteRoot()\n\n  let hover = false\n  let open = false\n\n  const ctx = setOpen(writable(false))\n\n  $: $ctx = open || hover\n  $: classes = cx(\"tint-navbar\", $$restProps.class)\n  $: menuClasses = cx(\"menu\", $cart.length > 0 && \"cart\")\n</script>\n\n<div class:open>\n  <IconButton\n    class={menuClasses}\n    icon=\"menu\"\n    variant=\"overlay\"\n    size=\"lg\"\n    on:click={() => (open = true)}\n  />\n  <nav\n    class:open\n    class:hover\n    class={classes}\n    use:clickOutside={root}\n    on:click_outside={() => (open = false)}\n    on:mouseenter={() => (hover = true)}\n    on:mouseleave={() => (hover = false)}\n  >\n    <i class=\"logo\"><slot name=\"logo\" /></i>\n    <slot close={() => (open = false)} />\n    <p in:fade out:fade>{$language.poweredBy} <b>Banuba</b></p>\n  </nav>\n</div>\n\n<style lang=\"postcss\">\n  div {\n    @apply relative z-50 h-full transform-gpu;\n    @apply w-0 lg:w-16;\n\n    &::before {\n      @apply transition-colors content-[''];\n      @apply lg:content-none;\n    }\n\n    &.open::before {\n      @apply absolute left-0 top-0 h-full w-screen bg-black/30;\n    }\n  }\n\n  nav {\n    @apply flex flex-col;\n\n    & > :global(*) {\n      @apply shrink-0;\n    }\n\n    &:hover p,\n    &.open p {\n      @apply opacity-100;\n    }\n  }\n\n  :global(.menu) {\n    @apply absolute top-3 left-3 z-40 md:left-4;\n    @apply lg:hidden;\n  }\n\n  :global(.menu.cart)::before {\n    @apply absolute top-0 right-0 block h-3 w-3 rounded-full bg-[#ff2d55] content-[\"\"];\n  }\n\n  div > :global(:last-child) {\n    @apply relative z-50 h-full w-[17.5rem] overflow-hidden bg-[#16161a] px-3 py-4 text-white transition-[width,transform] duration-300;\n    @apply lg:w-full lg:hover:w-[17.5rem];\n\n    &:not(.open) {\n      @apply -translate-x-full lg:translate-x-0;\n    }\n  }\n\n  .logo {\n    @apply mb-2 flex h-[3.75rem] items-center justify-start;\n  }\n\n  p {\n    @apply whitespace-nowrap text-center text-xs text-opacity-60 opacity-0;\n\n    & > b {\n      @apply text-opacity-100;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import Icon, { type Variant as IconVariant } from \"../Icon\"\n  import { getOpen } from \"./context\"\n\n  export let as = \"a\"\n  export let active = false\n  export let icon: IconVariant | string = \"\"\n\n  const ctx = getOpen()\n\n  $: open = $ctx\n  $: [src, variant] = /\\.svg/.test(icon) ? [icon] : [, icon as IconVariant]\n</script>\n\n<svelte:element\n  this={as}\n  class=\"tint-navbar-item\"\n  class:active\n  role=\"button\"\n  on:click|preventDefault\n  {...$$restProps}\n>\n  {#if src}\n    <Icon {src} />\n  {:else if variant}\n    <Icon {variant} />\n  {/if}\n  <span class:hidden={!open}>\n    <slot />\n  </span>\n</svelte:element>\n\n<style lang=\"postcss\">\n  .tint-navbar-item {\n    @apply flex h-full w-full basis-0 items-center whitespace-nowrap rounded-lg bg-white bg-opacity-0 p-2 text-sm font-semibold opacity-75 transition-colors;\n\n    &:hover {\n      @apply bg-opacity-[0.07] opacity-100;\n    }\n    &.active {\n      @apply bg-opacity-[0.15] opacity-100;\n    }\n    &.active:hover,\n    &:active {\n      @apply bg-opacity-20 opacity-100;\n    }\n\n    & > :global(*) {\n      @apply flex-shrink-0;\n    }\n  }\n\n  span {\n    @apply ml-2 inline transition-opacity duration-200;\n\n    &.hidden {\n      @apply opacity-0 delay-[0s] duration-300;\n    }\n  }\n</style>\n"],"names":["ctx","insert","target","div","anchor","$$props","placement","offset","delay","floating","$$value","open_handler","$$invalidate","classes","cx","$$restProps","constants_0","child_ctx","constants_1","Paths","constants_2","dirty","navbar_changes","t_value","set_data","t","popup_changes","if_block0","create_if_block_4","if_block1","create_if_block_3","li","navitem_changes","if_block","create_if_block_2","isMobileDevice","i","ul","each_blocks","create_if_block","router","useRouter","getContext","createEventDispatcher","items","RouteSettingByPath","$language","routes","route","setting","idx","bookADemo","pickADate","bestMatch","showAd","implemented","close","click_handler_1","analytics","click_handler_2","cart","$router","key","setOpen","value","setContext","getOpen","t3_value","append","nav","p","b","current","t3","root","getSvelteRoot","hover","open","writable","click_handler","func","click_outside_handler","mouseenter_handler","mouseleave_handler","set_store_value","$ctx","menuClasses","$cart","svelte_element","span","create_dynamic_element","as","active","icon","src","variant"],"mappings":"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"}